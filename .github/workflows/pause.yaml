name: Pause Schedule

on:
  workflow_dispatch:
    inputs:
      revenue_threshold_met:
        description: 'Boolean value indicating whether revenue threshold is met'
        required: true

jobs:
  pause_schedule:
    runs-on: ubuntu-latest
    env:
      PAUSE_SCHEDULE_FLAG: ${{ secrets.PAUSE_SCHEDULE_FLAG }}
    steps:
      - name: Set pause flag to true
        if: ${{ inputs.revenue_threshold_met == 'true' && env.PAUSE_SCHEDULE_FLAG != 'true' }}
        run: |
          # Access the revenue_threshold_met from the input
          echo "Revenue threshold met: ${{ inputs.revenue_threshold_met }}"
          # Set the PAUSE_SCHEDULE_FLAG to true
          echo "PAUSE_SCHEDULE_FLAG=true" >> $GITHUB_ENV
      
      - name: Check PAUSE_SCHEDULE_FLAG value
        run: |
          echo "PAUSE_SCHEDULE_FLAG: ${{ env.PAUSE_SCHEDULE_FLAG }}"

      - name: Pause the schedule if revenue threshold is met and flag is true
        if: ${{ inputs.revenue_threshold_met == 'true' && env.PAUSE_SCHEDULE_FLAG == 'true' }}
        run: |
          # Access the revenue_threshold_met from the environment
          echo "Revenue threshold met: $REVENUE_THRESHOLD_MET"
          
          # Calculate the remaining time until midnight
          now=$(date +%s)
          midnight=$(date -d 'tomorrow 00:00:00' +%s)
          remaining_seconds=$((midnight - now))
          
          # Sleep until midnight
          echo "Pause the schedule until midnight."
          sleep $remaining_seconds
          
          # Set the flag back to false before resuming
          echo "false" >> $GITHUB_ENV
          
      # After the pause is over, trigger the actions.yaml workflow
      - name: Trigger actions.yaml workflow
        if: ${{ inputs.revenue_threshold_met == 'true' && env.PAUSE_SCHEDULE_FLAG == 'true' }}
        run: |
          echo "Resume the schedule. Triggering actions.yaml workflow."
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.everest-preview+json" \
            https://api.github.com/repos/jhalzel/amz-monitor_test/dispatches \
            -d '{"event_type": "resume_schedule"}'

